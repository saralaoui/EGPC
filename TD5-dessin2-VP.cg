/***********************************************************************
File: TD5-dessin-VP.cg

Rendu Graphique Avancé RGA
Master Professionnel d'informatique
Christian Jacquemin, Université Paris 11

Copyright (C) 2004 University Paris 11 
This file is provided without support, instruction, or implied
warranty of any kind.  University Paris 11 makes no guarantee of its
fitness for a particular purpose and is not liable under any
circumstances for any damages or loss whatsoever arising from the use
or inability to use this file or items derived from it.
*************************************************************************/

void main(
            float4 position      : POSITION,      // espace objet
            float2 texcoords     : TEXCOORD0,

            uniform float        largeur,         // largeur d'une particule
            uniform float        profondeur,      // prof en z d'une particule
            uniform float4x4     ModelViewProj,   // esp objet -> esp clipping
            uniform float4x4     ModelView,       // esp objet -> esp de l'observateur
            uniform sampler2D    mass_positionsV: TEXUNIT0, // mass positions

            out float4 HPosition    : POSITION,
            out float2 decalCoords  : TEXCOORD0
	  )
{
    float texPositionCoords = position.x;     // indice de la masse courante 
    float index = position.y;     // 0, 1, 2 or 3 for 2 
                                  // vertices of quad
	//float largeur = position.z;							  
								  
    float4 positionsTexture 
            = tex2D( mass_positionsV , float2( position.x/511.0 , 0.0 ) );
			
    // positionsTexture = float2(-1,1);
	
    position.xy = positionsTexture.rg;

    // position.xy = float2( 0.5 , 0.5);
    position.z += profondeur;
    position.w = 1.0;
    // quads
    if( index < 1.0 ) {
      position.xy += float2(largeur,largeur);
    }
    else if( index < 2.0 ) {
      position.xy += float2(largeur,-largeur);
    }
    else if( index < 3.0 ) {
      position.xy += float2(-largeur,-largeur);
    }
    else if( index < 4.0 ) {
      position.xy += float2(-largeur,largeur);
    }
    
    // line loop, on laisse le point en place
    else {
    }

    // calcul de la position en coordonnées homogènes
    // (dans le cube canonique: l'espace de clipping) pour le rasteriseur
    HPosition = mul(ModelViewProj, position );

    // passe les coordonnées de texture
    decalCoords = texcoords;
}
